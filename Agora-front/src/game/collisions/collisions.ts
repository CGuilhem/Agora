import Boundary from '../classes/Boundary'
import { Sprite } from '../classes/Sprite'
import { LOBBY_TILES_WIDTH, OFFSET } from '../parameters'

const collisions = [
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  0, 0, 0, 631, 631, 631, 631, 631, 631, 631, 631, 631, 0, 631, 631, 631, 631,
  631, 631, 0, 631, 631, 631, 631, 631, 631, 631, 631, 631, 631, 0, 631, 631, 0,
  0, 0, 0, 0, 0, 0, 0, 631, 0, 0, 0, 0, 0, 0, 631, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  631, 631, 631, 0, 0, 0, 0, 0, 631, 631, 0, 631, 0, 0, 0, 0, 0, 0, 631, 0, 0,
  0, 0, 0, 0, 0, 0, 0, 0, 0, 631, 631, 631, 631, 631, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  0, 0, 0, 0, 0, 631, 631, 631, 631, 631, 631, 631, 631, 631, 631, 631, 631, 0,
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  631, 631, 631, 631, 631, 631, 631, 631, 631, 631, 631, 0, 0, 0, 0, 0, 0, 631,
  631, 631, 631, 631, 631, 631, 631, 631, 631, 631, 631, 631, 631, 0, 631, 0, 0,
  0, 0, 0, 0, 631, 0, 0, 0, 0, 0, 0, 631, 0, 0, 0, 0, 0, 0, 0, 0, 631, 631, 0,
  631, 631, 0, 631, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 631, 0, 0,
  0, 0, 0, 631, 0, 0, 631, 631, 631, 0, 631, 631, 631, 631, 631, 631, 631, 0, 0,
  0, 0, 0, 0, 631, 0, 0, 631, 0, 0, 0, 631, 0, 631, 631, 0, 631, 631, 0, 0, 0,
  0, 0, 0, 0, 0, 0, 631, 0, 0, 0, 0, 631, 631, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  631, 631, 631, 631, 631, 631, 631, 631, 631, 631, 631, 631, 0, 0, 0, 0, 631,
  631, 631, 631, 631, 631, 631, 631, 631, 631, 631, 631, 631, 631, 631, 0, 0, 0,
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 631, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 631,
  631, 0, 0, 0, 0, 0, 0, 631, 631, 631, 631, 0, 0, 0, 0, 631, 0, 0, 0, 0, 631,
  631, 631, 631, 0, 0, 0, 0, 631, 631, 0, 631, 0, 0, 0, 0, 631, 0, 0, 0, 0, 0,
  0, 0, 631, 0, 0, 0, 0, 0, 0, 0, 0, 631, 0, 0, 631, 631, 631, 631, 631, 0, 631,
  631, 0, 631, 0, 0, 0, 0, 0, 0, 0, 0, 631, 0, 0, 0, 0, 0, 0, 0, 631, 631, 631,
  631, 631, 631, 0, 0, 0, 631, 631, 0, 631, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  0, 0, 0, 0, 0, 0, 0, 0, 0, 631, 631, 631, 631, 631, 631, 631, 631, 631, 631,
  631, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  0, 0, 0, 0, 631, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 631, 0, 0,
  0, 0, 0, 0, 0, 0, 0, 0, 631, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  0, 631, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 631, 0, 0, 0, 0, 0, 631, 631, 631, 631,
  631, 631, 631, 631, 631, 631, 631, 631, 631,
]

export const createBoundaries = () => {
  const collisionsMap: number[][] = []

  for (let i = 0; i < collisions.length; i += LOBBY_TILES_WIDTH) {
    collisionsMap.push(collisions.slice(i, i + LOBBY_TILES_WIDTH))
  }
  const boundaries: Boundary[] = []
  collisionsMap.forEach((row, i) => {
    row.forEach((tile, j) => {
      if (tile === 631) {
        boundaries.push(
          new Boundary({
            position: {
              x: j * Boundary.width + OFFSET.X,
              y: i * Boundary.height + OFFSET.Y,
            },
          }),
        )
      }
    })
  })

  return boundaries
}

export const checkRectangularCollision = ({
  a,
  b,
}: {
  a: Sprite
  b: Boundary
}) => {
  const topOffset = a.height * 0.72
  return (
    a.position.x + a.width >= b.position.x &&
    a.position.x <= b.position.x + Boundary.width &&
    a.position.y + topOffset <= b.position.y + Boundary.height &&
    a.position.y + a.height >= b.position.y
  )
}

export default collisions
